AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploys fluent-bit to an existing kubernetes cluster and routes logs to ElasticSearch"
Metadata:
  QSLint:
    Exclusions: [W9002, W9003, W9004, W9006]
Parameters:
  EksClusterName:
    Type: String
  Namespace:
    Type: String
    Default: fluentbit
    Description: '(Optional) Kubernetes namespace to deploy FluentBit into.'
  OIDCIssuerURL:
    Type: String
    Description: 'OIDCIssuerURL WITHOUT leading protocol.'
#  DomainName:
#    Description: User-defined Elasticsearch domain name
#    Type: String
#  ElasticsearchVersion:
#    Description: User-defined Elasticsearch version
#    Type: String
#  InstanceType:
#    Type: String
#  AvailabilityZone:
#    Type: String
#  CidrBlock:
#    Type: String
#  GroupDescription:
#    Type: String
#  SGName:
#    Type: String

Resources:
#  ElasticsearchDomain:
#    Type: 'AWS::Elasticsearch::Domain'
#    Properties:
#      DomainName:
#        Ref: DomainName
#      ElasticsearchVersion:
#        Ref: ElasticsearchVersion
#      ElasticsearchClusterConfig:
#        InstanceCount: '1'
#        InstanceType:
#          Ref: InstanceType
#      EBSOptions:
#        EBSEnabled: true
#        Iops: '0'
#        VolumeSize: '10'
#        VolumeType: 'standard'
#      AccessPolicies:
#        Version: '2012-10-17'
#        Statement:
#          - Effect: Deny
#            Principal:
#              AWS: '*'
#            Action: 'es:*'
#            Resource: '*'
#      AdvancedOptions:
#        rest.action.multi.allow_explicit_index: true
#      DomainEndpointOptions:
#        EnforceHTTPS: True
#      LogPublishingOptions:
#        AUDIT_LOGS:
#          Enabled: False

#TODO Admin access should be removed. Using for config debugging.
  FluentbitRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:${AWS::Partition}:iam::${AWS::AccountId}:oidc-provider/${OIDCIssuerURL}"
              },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "${OIDCIssuerURL}:sub": "system:serviceaccount:${Namespace}:fluentbit"
                }
              }
            }
          ]
        }
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'

  FluentBitNamespace:
    Type: "AWSQS::Kubernetes::Resource"
    Properties:
      ClusterName: !Ref EksClusterName
      Namespace: 'kube-system'
      Manifest: !Sub |
        kind: Namespace
        apiVersion: v1
        metadata:
          name: ${Namespace}

  FluentBitServiceAccount:
    Type: "AWSQS::Kubernetes::Resource"
    DependsOn: FluentBitNamespace
    Properties:
      ClusterName: !Ref EksClusterName
      Namespace: !Ref Namespace
      Manifest: !Sub |
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          labels:
            app.kubernetes.io/name: fluentbit
          annotations:
            eks.amazonaws.com/role-arn: ${FluentbitRole.Arn}
          name: fluentbit

  AWSFluentBitHelmChart:
    Type: "AWSQS::Kubernetes::Helm"
    DependsOn: FluentBitServiceAccount
    Properties:
      ClusterID: !Ref EksClusterName
      Namespace: !Ref Namespace
      Repository: 'https://aws.github.io/eks-charts'
      Chart: 'eks/aws-for-fluent-bit'
      Values:
        serviceAccount.create: false
        serviceAccount.name: fluentbit
        firehose.enabled: false
        firehose.match: "*"
        firehose.region: "us-east-1"
        firehose.deliveryStream: "my-stream"
        cloudWatch.enabled: true
        kinesis.enabled: false
        elasticsearch.enabled: false

#Outputs:
#  DomainArn:
#    Value: !GetAtt ElasticsearchDomain.DomainArn
#  DomainEndpoint:
#    Value: !GetAtt ElasticsearchDomain.DomainEndpoint

